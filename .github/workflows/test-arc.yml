name: Enhanced ARC Runner Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-runner:
    runs-on: arc-runners
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Test environment
      run: |
        echo "Running on a self-hosted runner"
        echo "Runner name: ${{ runner.name }}"
        echo "Runner OS: ${{ runner.os }}"
        echo "GitHub workspace: ${{ github.workspace }}"
        echo "GitHub ref: ${{ github.ref }}"

    - name: Test docker in docker 
      run: |
        docker run --rm ubuntu:latest bash -c "echo hello Google DevFest 2024"
        docker run --rm python:3.9-slim python -c "print('Python says: Hello from Docker!')"

    - name: Run a multi-line script
      run: |
        echo "Starting multi-line script test"
        for i in {1..5}
        do
          echo "Iteration $i"
          date
          sleep 1
        done
        echo "Multi-line script test completed"

    - name: Test GitHub Actions Context
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Repository: ${{ github.repository }}"
        echo "Commit SHA: ${{ github.sha }}"

  container-job:
    runs-on: arc-runners
    container: ubuntu:latest
    steps:
    - name: Test container environment
      run: |
        echo "Running in a container on a self-hosted runner"
        echo "Runner name: ${{ runner.name }}"
        echo "Runner OS: ${{ runner.os }}"
        uname -a
        cat /etc/os-release

  matrix-job:
    runs-on: arc-runners
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
